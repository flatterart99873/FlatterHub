local function firepp(object, amount, skip)
	if object.ClassName == "ProximityPrompt" then

		amount = amount or 1

		local PromptTime = object.HoldDuration

		if skip then
			PromptTime = 0
		end
		
		for i = 1, amount do
			object:InputHoldBegin()
			if not skip then
				wait(object.HoldDuration)
			end
			object:InputHoldEnd()
		end

		object.HoldDuration = PromptTime

	else
		error("Specified instance isn't a ProximityPrompt!")
	end
end



local BlockedRemotes = {
    "RemoteEvent",
}

local Events = {
    Fire = true, 
    Invoke = true, 
    FireServer = true, 
    InvokeServer = true,
}

local gameMeta = getrawmetatable(game)
local psuedoEnv = {
    ["__index"] = gameMeta.__index,
    ["__namecall"] = gameMeta.__namecall;
}
setreadonly(gameMeta, false)
gameMeta.__index, gameMeta.__namecall = newcclosure(function(self, index, ...)
    if Events[index] then
        for i,v in pairs(BlockedRemotes) do
            if v == self.Name and not checkcaller() then
				return nil
			end
        end
    end
    return psuedoEnv.__index(self, index, ...)
end)
setreadonly(gameMeta, true)



Time = 1 -- seconds
repeat wait() until game:IsLoaded()
wait(Time)
local PlaceID = game.PlaceId
local AllIDs = {}
local foundAnything = ""
local actualHour = os.date("!*t").hour
local Deleted = false
function TPReturner()
   local Site;
   if foundAnything == "" then
       Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100'))
   else
       Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100&cursor=' .. foundAnything))
   end
   local ID = ""
   if Site.nextPageCursor and Site.nextPageCursor ~= "null" and Site.nextPageCursor ~= nil then
       foundAnything = Site.nextPageCursor
   end
   local num = 0;
   for i,v in pairs(Site.data) do
       local Possible = true
       ID = tostring(v.id)
       if tonumber(v.maxPlayers) > tonumber(v.playing) then
           for _,Existing in pairs(AllIDs) do
               if num ~= 0 then
                   if ID == tostring(Existing) then
                       Possible = false
                   end
               else
                   if tonumber(actualHour) ~= tonumber(Existing) then
                       local delFile = pcall(function()
                           delfile("NotSameServers.json")
                           AllIDs = {}
                           table.insert(AllIDs, actualHour)
                       end)
                   end
               end
               num = num + 1
           end
           if Possible == true then
               table.insert(AllIDs, ID)
               wait()
               pcall(function()
                   writefile("NotSameServers.json", game:GetService('HttpService'):JSONEncode(AllIDs))
                   wait()
                   game:GetService("TeleportService"):TeleportToPlaceInstance(PlaceID, ID, game.Players.LocalPlayer)
               end)
               wait(4)
           end
       end
   end
end

function Teleport()
   while wait() do
       pcall(function()
           TPReturner()
           if foundAnything ~= "" then
               TPReturner()
           end
       end)
   end
end



local player = game.Players.LocalPlayer
local char = player.Character

for i, item in pairs(game.Workspace:WaitForChild("Item_Spawns"):WaitForChild("Items"):GetChildren()) do
	if item:IsA("Model") then
		local itempos = item:FindFirstChildOfClass("MeshPart").Position
		local itempp = item:WaitForChild("Hitbox"):FindFirstChildOfClass("ProximityPrompt")

		char:MoveTo(itempos)

		wait(0.2)

		firepp(itempp, 1, false)

		wait(0.2)

		pcall(function()
			item:Destroy()
		end)

		wait(0.5)
	end
end

Teleport()
